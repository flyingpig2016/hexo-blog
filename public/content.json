[{"title":"mongodb常用命令学习","date":"2017-07-02T08:23:25.000Z","path":"2017/07/02/mongodb常用命令学习/","content":"<h2 id=\"mongoDB常用命令\"><a href=\"#mongoDB常用命令\" class=\"headerlink\" title=\"mongoDB常用命令\"></a>mongoDB常用命令</h2><h3 id=\"1-展示数据库：show-dbs；\"><a href=\"#1-展示数据库：show-dbs；\" class=\"headerlink\" title=\"1. 展示数据库：show dbs；\"></a><strong>1. 展示数据库：</strong><code>show dbs</code>；</h3><h3 id=\"2-显示当前数据库对象或集合：db\"><a href=\"#2-显示当前数据库对象或集合：db\" class=\"headerlink\" title=\"2. 显示当前数据库对象或集合：db;\"></a><strong>2. 显示当前数据库对象或集合：</strong><code>db</code>;</h3><h3 id=\"3-连接到一个指定的数据库-use\"><a href=\"#3-连接到一个指定的数据库-use\" class=\"headerlink\" title=\"3. 连接到一个指定的数据库:  use;\"></a><strong>3. 连接到一个指定的数据库:</strong>  <code>use</code>;</h3><h3 id=\"4-关系型数据库和mongodb的术语：\"><a href=\"#4-关系型数据库和mongodb的术语：\" class=\"headerlink\" title=\"4. 关系型数据库和mongodb的术语：\"></a><strong>4. 关系型数据库和mongodb的术语：</strong></h3><p><img src=\"http://img.blog.csdn.net/20170610182030359?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZmx5aW5ncGlnMjAxNg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"></p>\n<h3 id=\"5-集合就是-MongoDB-文档组，类似于-RDBMS中的表格，例如：\"><a href=\"#5-集合就是-MongoDB-文档组，类似于-RDBMS中的表格，例如：\" class=\"headerlink\" title=\"5. 集合就是 MongoDB 文档组，类似于 RDBMS中的表格，例如：\"></a><strong>5. 集合就是 MongoDB 文档组，</strong>类似于 RDBMS中的表格，例如：</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;<span class=\"attr\">\"site\"</span>:<span class=\"string\">\"www.baidu.com\"</span>&#125;</div><div class=\"line\">&#123;<span class=\"attr\">\"site\"</span>:<span class=\"string\">\"www.google.com\"</span>,<span class=\"attr\">\"name\"</span>:<span class=\"string\">\"Google\"</span>&#125;</div><div class=\"line\">&#123;<span class=\"attr\">\"site\"</span>:<span class=\"string\">\"www.runoob.com\"</span>,<span class=\"attr\">\"name\"</span>:<span class=\"string\">\"菜鸟教程\"</span>,<span class=\"attr\">\"num\"</span>:<span class=\"number\">5</span>&#125;</div></pre></td></tr></table></figure>\n<p>&emsp;&emsp;集合存在于数据库中，集合没有固定的结构，这意味着你在对集合可以插入不同格式和类型的数据，但通常情况下我们插入集合的数据都会有一定的关联性。</p>\n<h3 id=\"6-创建myblog数据库：use-myblog-此时还不能用show-dbs来查看，因为没有数据。当我们插入数据的时候才能看到数据列表：db-myblog-insert-name-39-bangbang-39\"><a href=\"#6-创建myblog数据库：use-myblog-此时还不能用show-dbs来查看，因为没有数据。当我们插入数据的时候才能看到数据列表：db-myblog-insert-name-39-bangbang-39\" class=\"headerlink\" title=\"6.创建myblog数据库：use myblog,此时还不能用show dbs来查看，因为没有数据。当我们插入数据的时候才能看到数据列表：db.myblog.insert({name:&#39;bangbang&#39;}) ;\"></a><strong>6.创建myblog数据库：</strong><code>use myblog</code>,此时还不能用<code>show dbs</code>来查看，因为没有数据。当我们插入数据的时候才能看到数据列表：<code>db.myblog.insert({name:&#39;bangbang&#39;})</code> ;</h3><h3 id=\"7-删除base02数据库：\"><a href=\"#7-删除base02数据库：\" class=\"headerlink\" title=\"7.删除base02数据库：\"></a><strong>7.删除base02数据库：</strong></h3><pre><code>首先，我们先创建一个base02数据库,并插入一条数据，**注意：要想显示数据库，需要至少插入一个文档进去。**\n</code></pre><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">use</span> <span class=\"selector-tag\">base02</span>;</div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.base02</span><span class=\"selector-class\">.insert</span>(&#123;<span class=\"attribute\">name</span>:<span class=\"string\">'qiqi'</span>&#125;); <span class=\"comment\">//插入一条数据</span></div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.dropDatabase</span>();\t\t<span class=\"comment\">//删除数据库</span></div></pre></td></tr></table></figure>\n<h3 id=\"8-创建和删除集合：\"><a href=\"#8-创建和删除集合：\" class=\"headerlink\" title=\"8.创建和删除集合：\"></a><strong>8.创建和删除集合：</strong></h3><p>创建集合：<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">use base02;</div><div class=\"line\">db.createCollection(<span class=\"string\">'mycollection'</span>); </div><div class=\"line\">show collections <span class=\"comment\">//使用show collections来检查创建的集合</span></div><div class=\"line\">db.createCollection(<span class=\"string\">\"mycol\"</span>, &#123; <span class=\"string\">capped :</span> <span class=\"literal\">true</span>, <span class=\"string\">autoIndexID :</span> <span class=\"literal\">true</span>, <span class=\"string\">size :</span> <span class=\"number\">6142800</span>, <span class=\"string\">max :</span> <span class=\"number\">10000</span> &#125; )<span class=\"comment\">//根据集合的规格创建</span></div></pre></td></tr></table></figure></p>\n<p>其实在MongoDB中并不需要创建集合。 当插入一些文档 MongoDB 会自动创建集合。<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//创建集合mycol1</span></div><div class=\"line\">db<span class=\"selector-class\">.mycol1</span><span class=\"selector-class\">.insert</span>(&#123;name:<span class=\"string\">'bangbang'</span>&#125;)</div><div class=\"line\"><span class=\"comment\">//删除集合mycol1</span></div><div class=\"line\">db<span class=\"selector-class\">.mycol1</span><span class=\"selector-class\">.drop</span>()</div></pre></td></tr></table></figure></p>\n<h3 id=\"9-插入文档\"><a href=\"#9-插入文档\" class=\"headerlink\" title=\"9.插入文档\"></a><strong>9.插入文档</strong></h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.mycol1</span><span class=\"selector-class\">.insert</span>(&#123;<span class=\"attribute\">name</span>:<span class=\"string\">'bangbang'</span>&#125;)</div></pre></td></tr></table></figure>\n<p>要以单个查询插入多个文档，可以通过文档 insert() 命令的数组方式<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">var datas = [</div><div class=\"line\">\t&#123;title: <span class=\"symbol\">'MongoDB</span> Overview',     description: <span class=\"symbol\">'MongoDB</span> <span class=\"keyword\">is</span> no sql database',    by_user: <span class=\"symbol\">'runoob.com</span>',    url: <span class=\"symbol\">'http</span>:</div><div class=\"line\">//www.runoob.com',    tags: [<span class=\"symbol\">'mongodb</span>', <span class=\"symbol\">'database</span>', <span class=\"symbol\">'NoSQL</span>'],    likes: <span class=\"number\">100</span> &#125;, </div><div class=\"line\">\t&#123;title: <span class=\"symbol\">'NoSQL</span> Overview',     description: <span class=\"symbol\">'No</span> sql</div><div class=\"line\">database <span class=\"keyword\">is</span> very fast',    by_user: <span class=\"symbol\">'runoob.com</span>',    url: <span class=\"symbol\">'http</span>://www.runoob.com',    tags: [<span class=\"symbol\">'mongodb</span>', <span class=\"symbol\">'database</span>', <span class=\"symbol\">'NoSQL</span>'],    likes</div><div class=\"line\">: 10 &#125;, </div><div class=\"line\">\t&#123;title: <span class=\"symbol\">'Neo4j</span> Overview',     description: <span class=\"symbol\">'Neo4j</span> <span class=\"keyword\">is</span> no sql database',    by_user: <span class=\"symbol\">'Neo4j</span>',    url: <span class=\"symbol\">'http</span>://www.neo4j.com'</div><div class=\"line\">,    tags: [<span class=\"symbol\">'neo4j</span>', <span class=\"symbol\">'database</span>', <span class=\"symbol\">'NoSQL</span>'],    likes: <span class=\"number\">750</span> &#125;];</div><div class=\"line\">db.mycol1.insert(datas);</div></pre></td></tr></table></figure></p>\n<h3 id=\"10-查询文档\"><a href=\"#10-查询文档\" class=\"headerlink\" title=\"10.查询文档\"></a><strong>10.查询文档</strong></h3><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//格式化显示</span></div><div class=\"line\">db.mycol1.<span class=\"built_in\">find</span>().pretty();</div><div class=\"line\"><span class=\"comment\">//非格式化显示</span></div><div class=\"line\">db.mycol1.<span class=\"built_in\">find</span>();</div><div class=\"line\"><span class=\"comment\">//按照条件查找</span></div><div class=\"line\">db.mycol1.<span class=\"built_in\">find</span>(&#123;<span class=\"string\">\"title\"</span>:<span class=\"string\">\"Neo4j Overview\"</span>&#125;)</div><div class=\"line\"><span class=\"comment\">//并列查找相当于and</span></div><div class=\"line\">db.mycol1.<span class=\"built_in\">find</span>(&#123;<span class=\"string\">\"title\"</span>:<span class=\"string\">\"Neo4j Overview\"</span>,<span class=\"string\">\"likes\"</span>:<span class=\"number\">750</span>&#125;)</div><div class=\"line\"><span class=\"comment\">//或查找，相当于or</span></div><div class=\"line\">db.mycol1.<span class=\"built_in\">find</span>(&#123;</div><div class=\"line\">\t\t$<span class=\"keyword\">or</span>:[&#123;likes:<span class=\"number\">10</span>&#125;,&#123;likes:<span class=\"number\">750</span>&#125;]</div><div class=\"line\">\t&#125;)</div><div class=\"line\"><span class=\"comment\">//联合查询</span></div><div class=\"line\">db.mycol1.<span class=\"built_in\">find</span>(&#123;likes:<span class=\"number\">10</span>,$<span class=\"keyword\">or</span>:[&#123;likes:<span class=\"number\">10</span>&#125;,&#123;likes:<span class=\"number\">750</span>&#125;]&#125;)</div></pre></td></tr></table></figure>\n<p><strong>11.更新文档</strong><br>&emsp;&emsp;update()方法将现有的文档中的值更新，而save()方法使用传递到save()方法的文档替换现有的文档。<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//用update更新选中的文档</span></div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.mycol1</span><span class=\"selector-class\">.update</span>(&#123;<span class=\"attribute\">title</span>:<span class=\"string\">'MongoDB Overview'</span>&#125;,&#123;$<span class=\"attribute\">set</span>:&#123;<span class=\"attribute\">title</span>:<span class=\"string\">'bangbang'</span>,<span class=\"attribute\">job</span>:<span class=\"string\">'program'</span>&#125;&#125;)</div><div class=\"line\"><span class=\"comment\">//用save更新，也就是全部替换了_id为593df22dfafc15a3d4d9bfc4的文档</span></div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.mycol1</span><span class=\"selector-class\">.save</span>(&#123;<span class=\"attribute\">_id</span>:ObjectId(<span class=\"string\">\"593df22dfafc15a3d4d9bfc4\"</span>),<span class=\"attribute\">title</span>:<span class=\"string\">'qiqi'</span>,<span class=\"attribute\">description</span>:<span class=\"string\">'I am qiqi'</span>&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"12-删除文档\"><a href=\"#12-删除文档\" class=\"headerlink\" title=\"12.删除文档\"></a><strong>12.删除文档</strong></h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//删除所有标题为MongoDB Overview的文件</span></div><div class=\"line\">db<span class=\"selector-class\">.mycol1</span><span class=\"selector-class\">.remove</span>(&#123;</div><div class=\"line\"><span class=\"string\">'title'</span>:<span class=\"string\">'MongoDB Overview'</span>&#125;)</div><div class=\"line\"><span class=\"comment\">//只删除一个</span></div><div class=\"line\">db<span class=\"selector-class\">.mycoll1</span><span class=\"selector-class\">.remove</span>(&#123;<span class=\"string\">'title'</span>:<span class=\"string\">'MongoDB Overview'</span>&#125;,<span class=\"number\">1</span>)</div><div class=\"line\"><span class=\"comment\">//如果没有指定删除条件，则MongoDB将从集合中删除整个文件。这相当于SQL的 truncate 命令。</span></div><div class=\"line\">db<span class=\"selector-class\">.mycol1</span><span class=\"selector-class\">.remove</span>()</div></pre></td></tr></table></figure>\n<h3 id=\"13-MongoDB投影\"><a href=\"#13-MongoDB投影\" class=\"headerlink\" title=\"13.MongoDB投影\"></a><strong>13.MongoDB投影</strong></h3><p>&emsp;&emsp;mongodb投影意义是只选择需要的数据，而不是选择整个一个文档的数据。如果一个文档有5个字段，只需要显示3个，只从中选择3个字段。MongoDB的find()方法，解释了MongoDB中查询文档接收的第二个可选的参数是要检索的字段列表。在MongoDB中，当执行find()方法，那么它会显示一个文档的所有字段。要限制这一点，需要设置字段列表值为1或0。1是用来显示字段，而0被用来隐藏字段.<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//这里只显示title和description字段，不显示_id字段</span></div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.mycol1</span><span class=\"selector-class\">.find</span>(&#123;&#125;,&#123;<span class=\"attribute\">title</span>:<span class=\"number\">1</span>,<span class=\"attribute\">description</span>:<span class=\"number\">1</span>,<span class=\"attribute\">_id</span>:<span class=\"number\">0</span>&#125;)</div></pre></td></tr></table></figure></p>\n<h3 id=\"14-限制文档\"><a href=\"#14-限制文档\" class=\"headerlink\" title=\"14.限制文档\"></a><strong>14.限制文档</strong></h3><p>&emsp;&ems;要在MongoDB中限制记录，需要使用limit()方法。 limit() 方法接受一个数字类型的参数，这是要显示的文档数量<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//只显示两条数据</span></div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.mycol1</span><span class=\"selector-class\">.find</span>()<span class=\"selector-class\">.limit</span>(<span class=\"number\">2</span>);</div><div class=\"line\"><span class=\"comment\">//只显示一条数据</span></div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.mycol1</span><span class=\"selector-class\">.find</span>(&#123;&#125;,&#123;<span class=\"attribute\">title</span>:<span class=\"number\">1</span>,<span class=\"attribute\">description</span>:<span class=\"number\">1</span>,<span class=\"attribute\">_id</span>:<span class=\"number\">0</span>&#125;)<span class=\"selector-class\">.limit</span>(<span class=\"number\">1</span>)</div></pre></td></tr></table></figure></p>\n<p>除了 limit()方法还有一个方法 skip()也接受数字类型参数并用于跳过文件数<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//跳过第一条显示全部</span></div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.mycol1</span><span class=\"selector-class\">.find</span>()<span class=\"selector-class\">.skip</span>(<span class=\"number\">1</span>);</div><div class=\"line\"><span class=\"comment\">//跳过第一条显示两条数据</span></div><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.mycol1</span><span class=\"selector-class\">.find</span>()<span class=\"selector-class\">.limit</span>(<span class=\"number\">2</span>)<span class=\"selector-class\">.skip</span>(<span class=\"number\">1</span>);</div></pre></td></tr></table></figure></p>\n<h3 id=\"15-文档排序\"><a href=\"#15-文档排序\" class=\"headerlink\" title=\"15.文档排序\"></a><strong>15.文档排序</strong></h3><p>&emsp;&emsp;要排序MongoDB中的文档，需要使用 sort()方法。 sort() 方法接受一个包含字段列表以及排序顺序的文档。 要使用1和-1指定排序顺序。1用于升序，而-1是用于降序。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.mycol1</span><span class=\"selector-class\">.find</span>()<span class=\"selector-class\">.sort</span>(&#123;<span class=\"attribute\">likes</span>:<span class=\"number\">1</span>&#125;)</div></pre></td></tr></table></figure></p>\n<h3 id=\"16-MongoDB索引\"><a href=\"#16-MongoDB索引\" class=\"headerlink\" title=\"16.MongoDB索引\"></a><strong>16.MongoDB索引</strong></h3><p>索引是特殊的数据结构，存储在一个易于设置遍历形式的数据的一小部分。索引存储在索引中指定特定字段的值或一组字段，并排序字段的值。要创建索引，需要使用MongoDB的ensureIndex()方法。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">db</span><span class=\"selector-class\">.mycol2</span><span class=\"selector-class\">.ensureIndex</span>(&#123;<span class=\"attribute\">title</span>:<span class=\"number\">1</span>&#125;)</div></pre></td></tr></table></figure></p>\n<h3 id=\"17-MongoDB-聚合\"><a href=\"#17-MongoDB-聚合\" class=\"headerlink\" title=\"17.MongoDB 聚合\"></a><strong>17.MongoDB 聚合</strong></h3><p>&emsp;&emsp;聚合操作处理数据记录并返回计算结果。从多个文档聚合分组操作数值，并可以执行多种对分组数据业务返回一个结果。</p>\n<h3 id=\"18-复制\"><a href=\"#18-复制\" class=\"headerlink\" title=\"18.复制\"></a><strong>18.复制</strong></h3><p>&emsp;&emsp;复制是同步在多个服务器上的数据过程。复制提供了冗余和数据在不同的数据库服务器上的多个副本提高数据的可用性，复制防止在单个服务器上丢失数据库。 复制也可以从硬件故障和服务中断中恢复。带有数据的其他副本，可以选择其中一个灾难恢复，报告或备份。<br><a href=\"http://www.cnblogs.com/huangxincheng/archive/2012/03/04/2379755.html\" target=\"_blank\" rel=\"external\">主从复制</a></p>\n","comments":true,"categories":[],"tags":[{"name":"MongoDB","slug":"MongoDB","permalink":"//flyingpig2016.github.io/tags/MongoDB/"}]},{"title":"resume","date":"2017-07-02T08:23:22.000Z","path":"2017/07/02/resume/","content":"","comments":true,"categories":[{"name":"resume","slug":"resume","permalink":"//flyingpig2016.github.io/categories/resume/"}],"tags":[]},{"title":"01note","date":"2017-06-22T15:18:54.000Z","path":"2017/06/22/01note/","content":"<p>这是我的note页面 </p>\n","comments":true,"categories":[],"tags":[{"name":"notes","slug":"notes","permalink":"//flyingpig2016.github.io/tags/notes/"}]}]